#collection of commands used in my thesis:
# if they have been run on qsub the filename will be present. otherwise it has been executed on iqsub. 

___________________________________________________________________________

###data download: qsub_chicken_data_download.sh
# data downloads from NCBI using SRA tools, converted to zipped fastq files.  

cd /home/projects/dtu_00009/data/chicken_data_TM;
prefetch --output-directory /home/projects/dtu_00009/data/chicken_data_TM --option-file run_ids;
fastq-dump --gzip --split-files *.sra;

parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_chicken_data_download.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/raw_data/sra.list

___________________________________________________________________________

### subsampling without parallels on predefined fastsubset.list : qsub_data_subset.sh

while read f; do
  seqtk sample $f 10000 | gzip - -c > /home/projects/dtu_00009/data/chicken_data_TM/subset/$f 
done <fastq_subset.list
_____________________

## subsampling with GNU parallels

cd /home/projects/dtu_00009/data/chicken_data_TM 

#create a list with all fastq file names
ls | grep ‘.fastq.gz$’ > subset/fastq.list

# test with one sample:
# seqtk sample SRR9113737_1.fastq.gz 1000 | gzip - -c > /home/projects/dtu_00009/data/chicken_data_TM/subset/SRR9113737_1.fastq.gz 

# running in parallel 
parallel -j 38 "seqtk sample {} 10000 | gzip - -c > /home/projects/dtu_00009/data/chicken_data_TM/subset/{}" :::: fastq.list
_________________________________________________________________________

###Quality check: on iqsub with 1 node and 40 cores.  

# for test on subset: fastqc -o /fastQC -t 38 *.fastq.gz

cd /home/projects/dtu_00009/data/chicken_data_TM

#250MB pr thread
fastqc -o /fastQC/initial_QC -t 40 *.fastq.gz
fastqc -o ../fastQC -t 40 *.fastq.gz

conda activate env_python3.6
multiqc .
___________________________________________________________________________

## removing adapters and first 5 bases with bbmap and bbduk  
# qsub_bbmap.sh

parallel --xapply -j 4 "bbduk.sh ref=/home/projects/dtu_00009/data/chicken_data_TM/adapter.fa forcetrimleft=5 i
n1={1} in2={2} out1=Trimmed/{1} out2=Trimmed/{2} ktrim=r k=23 mink=11 hdist=1 hdist2=0 tpe tbo" :::: r1.list ::
:: r2.list


#2.omgang med parallels udenfor

parallel --xapply "qsub -F '{1} {2}' /home/projects/dtu_00009/data/Scripts/qsub_bbmap.sh " :::: /home/projects/dtu_00009/data/chicken_data_TM/r1.list :::: /home/projects/dtu_00009/data/chicken_data_TM/r2.list



bbduk.sh ref=/home/projects/dtu_00009/data/chicken_data_TM/adapter.fa forcetrimleft=5 in1={1} in2={2} out1=Trimmed/{1} out2=Trimmed/{2} ktrim=r k=23 mink=11 hdist=1 hdist2=0 tpe tbo
ktrim=r stands for adapter trimming from the right aka the 3’ end
k: size of kmer
mink: incase you have adapter sequence shorter than the stated size of k, the mink option allows to look at kmers shorter than k  and down to the value of mink. So in this case it will also look at kmers in the size of 22 - 11. 
hdist:  determines how many kmers are stored in memory, it stands for hamming distance and is a measure of difference between strings. 11001 vs 11011 has a hamming distance of 1. hdist=1 will allow storing kmers with a distance of 1 and will store more kmers than hdist=0 which will store only the unique kmers.   
hdist2: is the same as hdist but only applies to kmers  shorter than the chosen kmer length. 
tpe: this flag specifies that both reads (in paired-end reads) should be trimmed to the same length. 
tbo: specifies to trim adapters based on pair overlap detection using BBMerge.

The adapter reference file used is provided by BBMap at their GitHub called adapters.fa 
___________________________________________________________________________

## removing low quality with sickle :
# qsub_sickle.sh 

ls Trimmed | grep '_1.fastq.gz$' > trimmed_r1.list
ls Trimmed | grep '_2.fastq.gz$' > trimmed_r2.list

#Running sickle on all samples to remove <50 bp reads and low quality sequences.
parallel --xapply -j 4 "sickle pe -t sanger -g -f Trimmed/{1} -r Trimmed/{2} -l 50 -o Hquality/{1} -p Hquality/
{2} -s Hquality/{1.}_singles.fastq.gz" :::: trimmed_r1.list :::: trimmed_r2.list

#2omgang m parallels udenfor
parallel --xapply "qsub -F '{1} {2}' /home/projects/dtu_00009/data/Scripts/qsub_sickle.sh " :::: /home/projects/dtu_00009/data/chicken_data_TM/trimmed_r1.list :::: /home/projects/dtu_00009/data/chicken_data_TM/trimmed_r2.list


sickle pe -t sanger -g -f Trimmed/{1} -r Trimmed/{2} -l 50 -o Hquality/{1} -p Hquality/ {2} -s Hquality/{1.}_singles.fastq.gz

pe: paired end reads
-t sanger:  indicates the quality score metric. Illumina quality using CASAVA >= v1.8 is Sanger encoded, while the illumina tag is used for versions 1.3 - 1.7. 
-g : Output gzipped files
-l 50 :  minimum accepted read length 
___________________________________________________________________________

# removing PhiX contamination - running with parallels. - remember to specify threads

cd /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/Hquality

ls | grep 'fastq.gz' > reads.list

parallel -j 4 "bbduk.sh in={} out=../NoPhiX/{} ref=../phix174_ill.ref.fa k=31 hdist=1" :::: reads.list

# When running paralles outside the qsub-file but runing a different q_sub on each file. 
# qsub_Phix_removal.sh

# for the paired reads
parallel --xapply "qsub -F '{1} {2}' /home/projects/dtu_00009/data/Scripts/qsub_Phix_removal.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/HQ_read1.list :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/HQ_read2.list

#for the single reads
parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_Phix_removal.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/HQ_read_singles.list


#parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_PhiX_removal_subset.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/HQ_reads.list

#parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_Phix_removal.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/HQ_reads.list



___________________________________________________________________________

#when running host contamination on gallus gallus and Brachypodium distachyon - related to all relavent corn species - but with a choromosome size below 500 MB. 
# qsub_bbmap_contamination_subset.sh - virker på subsets men qsub_bbmap_contamination.sh virker ikke af uforklarelige årsager, men med parallels udenfor qsub ser det bedre ud - tilføjer man nodisk = true så skriver den ikke index filen til disk der ellers vil blive korrupted når man kører parallelt. + nodisk=true og -t=32

parallel --xapply "qsub -F '{1} {2}' /home/projects/dtu_00009/data/Scripts/qsub_bbmap_contamination_paired.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/NoPhiX_r1.list :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/NoPhiX_r2.list

parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_bbmap_contamination_singles.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/NoPhiX_singles.list


bbmap.sh in1=~…/NoPhiX2/"$R1" in2=/home/~…/NoPhiX2/"$R2" ref=/home/projects/dtu_00009/data/reference_genomes/contamination_refs.fna.gz outu1=/No_contamination/"$R1" outu2=/No_contamination/"$R2" nodisk=true -t=32

nodisk: to enable to run parallel without corrupting the index file this was not written to disk but kept in memory. 
-t : number of threads utilised.
___________________________________________________________________________


### nonpareil
#make a list of all the preprocessed reads

ls /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/No_contamination | grep '_1.fastq.gz$' > /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/preprocessed_r1.list

#unziping the files in No_contamination folder. 

#on a small test list
parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_unzip_nonpareil.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/test.list

parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_unzip_nonpareil.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/preprocessed_r1.list

# creating a new list with the unzipped file names - so without .gz in the end. 
ls /home/projects/dtu_00009/data/chicken_data_TM/2_omgangNo_contamination | grep '_1.fastq$' > /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/preprocessed_r1_unzipped.list


# running the nonpareil
parallel " qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_nonpareil.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/preprocessed_r1_unzipped.list

# for the test list:
parallel " qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_nonpareil.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/unzipped_test.list



# rezipping the files again
#on the test.list
parallel -j 32 "nonpareil -s /home/projects/dtu_00009/data/chicken_data_TM/No_contamination{} -T kmer -b {.} -f fastq -t 32" :::: /home/projects/dtu_00009/data/chicken_data_TM/unzipped_test.list

# rezip on the full list
parallel -j 32 "nonpareil -s /home/projects/dtu_00009/data/chicken_data_TM/No_contamination{} -T kmer -b {.} -f fastq -t 32" :::: /home/projects/dtu_00009/data/chicken_data_TM/preprocessed_r1_unzipped.list

parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_rezip_after_nonpareil.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/preprocessed_r1_unzipped.list


___________________________________________________________________________

## Assembley

#for counting kmers. (not sure why) -m 15 is kmer size of 15. 
gzip -dc Vchol-001_6.pair*.truncated.gz | jellyfish count -t 2 -m 15 -s 1000000000 -o Vchol-001 -C /dev/fd/0
jellyfish histo Vchol-001 > Vchol-001.histo

R
dat=read.table("Vchol-001.histo")
barplot(dat[,2], xlim=c(0,150), ylim=c(0,5e5), ylab="No of kmers", xlab="Counts of a k-mer", names.arg=dat[,1], cex.names=0.8)
dev.print("Vchol-001.histo.pdf", device=pdf)

# to view the plot or download if it dosen't work - or download anyway to keep: 
evince kmerFreq.pdf &

#running SPAdes - SPAdes will run error correction and use multiple k-mers at the same time when it is doing the assembly. 

/home/27626/bin/spades.py --meta -1 MH0047.1.fastq.gz -2 MH0047.2.fastq.gz -m 120 -o spades_MH0047

# some SPAdes options 
-t <int> (or --threads <int>) :Number of threads. The default value is 16.

-m <int> (or --memory <int>) Set memory limit in Gb. SPAdes terminates if it reaches this limit. The default value is 250 Gb. Actual amount of consumed RAM will be below this limit. Make sure this value is correct for the given machine. SPAdes uses the limit value to automatically determine the sizes of various buffers, etc.


#Path to SPAdes
home/projects/dtu_00009/people/majjag/Bin/Programs/miniconda3/envs/env_SPAdes/bin/spades.py


#parallel --xapply "qsub -F '{1} {2} {3}' /home/projects/dtu_00009/data/Scripts/qsub_spades.sh " :::: /home/projects/dtu_00009/d
ata/chicken_data_TM/2_omgang/preprocessed_r1.list :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/preprocessed_r2.li
st :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/preprocessed_singles.list

conda activate env_SPAdes

#Get input filenames from commandline
R1=$1
R2=$2
S1=$3

#Run commands
output_dir="${R1%%_*}"

spades.py --meta -k 21,33,55,77 -o /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/"$output_dir" -1 "$R1" -
2 "$R2" -s "$S1"
#Deactivate conda enviroment
conda deactivate

___________________________________________________________________________

#VAMB

#Path to concatenate.py - to concatenate the output from assembley to make a reference to generate BAM files. 
/home/projects/dtu_00009/people/majjag/Bin/Programs/miniconda3/envs/env_vamb/bin/concatenate.py 
 - måske det er nok at aktivere conda env_vamb

concatenate.py output_file input_file1 input_file2 ... 

#filelist with path generated in contigs.txt wiht jupyternotebook "vamb - file prep" - make sure to be /home/..

#probably you can use the following instead of the long code below. 
/home/projects/dtu_00009/people/majjag/Bin/Programs/miniconda3/envs/env_vamb/bin/concatenate.py /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/catalogue.fna.gz /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/*/contigs.fasta

# actual command run on iqsub:
/home/projects/dtu_00009/people/majjag/Bin/Programs/miniconda3/envs/env_vamb/bin/concatenate.py /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/catalogue.fna.gz /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241647/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241649/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241651/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241653/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241655/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241848/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241849/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241855/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241856/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241860/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241887/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241890/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241891/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241893/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241899/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241919/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241923/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241925/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241927/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241945/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323088/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323134/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323167/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323172/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323197/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323200/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323205/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323243/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323244/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323247/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323249/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323250/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323252/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323295/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323296/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323338/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323340/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323343/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323350/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323367/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323384/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323414/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323449/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323493/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323502/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323503/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323514/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323516/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323530/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323550/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR6323556/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR9113691/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR9113706/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR9113707/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR9113725/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR9113737/contigs.fasta


/home/projects/dtu_00009/people/majjag/Bin/Programs/miniconda3/envs/env_vamb/bin/concatenate.py /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/catalogue.fna.gz /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/ERR2241647/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR9113725/contigs.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/spades_output/SRR9113737/contigs.fasta 

#generating BAM files 
# first indexing og catalog - ref. file 

minimap2 -I 32g -d catalogue.mmi /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/catalogue.fna.gz

#align reads back to reference based on SPAdes denovo assembley:
#getting the first column from samples2data.txt to get a list of samples id
cut -f 1 samples2data.txt > sampleName 

# command in the Script file qsub_minimap_vamb.sh:
_________
cd /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb
sample=$1

conda activate env_vamb

minimap2 -t -I 32g 8 -N 50 -ax sr catalogue.mmi  /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/No_contamination/"$sample"_1.fastq.gz /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/No_contamination/"$sample"_2.fastq.gz | samtools view -F 3584 -b --threads 8 > /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/"$sample".bam

conda deactivate 
________

#commandline runing qsub:
parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_minimap_vamb.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/sampleName 


# to generate the depth matrix on bam files they need to be sorted: 
samtools sort infile.bam outfile.sorted.bam
_________
cd /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam
sample=$1

conda activate env_vamb

samtools sort --threads 8 /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/"$sample".bam -o /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/"$sample".sorted.bam 

conda deactivate 
____________

# parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_bam_sort_vamb.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/sampleName


#For generating depth matrix from MetaBat - using iqsub (remember correct environment env_vamb)
#Usage: jgi_summarize_bam_contig_depths <options> sortedBam1 [ sortedBam2 ...]

#maybe this can be used instead of the long code below:
jgi_summarize_bam_contig_depths --outputDepth /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/jgi_depthMatrix /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/*.sorted.bam

jgi_summarize_bam_contig_depths --outputDepth /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/jgi_depthMatrix /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241647.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241649.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241651.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241653.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241655.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241848.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241849.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241855.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241856.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241860.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241887.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241890.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241891.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241893.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241899.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241919.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241923.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241925.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241927.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/ERR2241945.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323088.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323134.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323167.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323172.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323197.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323200.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323205.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323243.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323244.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323247.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323249.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323250.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323252.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323295.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323296.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323338.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323340.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323343.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323350.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323367.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323384.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323414.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323449.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323493.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323502.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323503.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323514.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323516.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323530.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323550.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR6323556.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR9113691.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR9113706.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR9113707.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR9113725.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/bam/sorted/SRR9113737.sorted.bam 

jgi_summarize_bam_contig_depths --outputDepth /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/depthMatrix.jgi /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/bam/sorted/ERR2241647.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/bam/sorted/SRR9113725.sorted.bam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/bam/sorted/SRR9113737.sorted.bam 

# then to running actual vamb! 

vamb -o SEP --outdir OUT --fasta FASTA --bamfiles BAM1 BAM2 [...] --minfasta 200000
                                       --jgi depthMatrix.jgi

vamb -o C --outdir /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/vamb_output/ --fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/catalogue.fna.gz --jgi /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/depthMatrix.jgi --minfasta 200000 


qsubfile :
cd /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/
conda activate env_vamb

JGI=$3
FASTA=$2
OUTDIR=$1

vamb -o C --cuda --outdir "$1" --fasta "$2" --jgi "$3"  --minfasta 200000

conda deactivate
_________

#test set
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/vamb_output /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/catalogue.fna.gz /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/depthMatrix.jgi' /home/projects/dtu_00009/data/Scripts/qsub_vamb.sh

#on full data set
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/vamb_output /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/catalogue.fna.gz /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/depthMatrix.jgi' /home/projects/dtu_00009/data/Scripts/qsub_vamb.sh

___________________________________________________________________________________________

#checkM 

# qsub_checkM.sh
checkm lineage_wf -t 32 -f /results_file --tab_table bin_dir output_dir

# on subset
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/checkM_test/results_file /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/vamb_output/bins /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/checkM_test' /home/projects/dtu_00009/data/Scripts/qsub_checkM.sh

#on full data
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/checkM/results_file /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/vamb_output/bins /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/checkM' /home/projects/dtu_00009/data/Scripts/qsub_checkM.sh
___________________________________________________________________________

# GDTB

# qsub_GTDB.sh needs a fat node for memory
#gtdbtk classify_wf --genome_dir INPUT --out_dir OUT_DIR --cpus 20 --force --debug

#on subset
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/vamb_output/bins /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/GTDB_test' /home/projects/dtu_00009/data/Scripts/qsub_GTDB.sh

# on full data 
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/vamb_output/bins /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/GTDB' /home/projects/dtu_00009/data/Scripts/qsub_GTDB.sh

___________________________________________________________________________

# dRep
# COMPARE

#dRep is able to perform rapid genome comparisons for a group of genomes and visualize their relatedness.

dRep compare '$OutputDir' -g '$inputFiles'

#De-replicatae a set of genomes. 

dRep dereplicate /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/dRep/test/dereplicate -g /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb_test/vamb_output/bins/*.fna

# alternatvie input from path listL /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/drep/genomePathList

#test_set 
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/drep_test/compare' /home/projects/dtu_00009/data/Scripts/qsub_drep_compare.sh

# fuld dataset
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/drep/compare' /home/projects/dtu_00009/data/Scripts/qsub_drep_compare.sh

/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/drep_test/genomePathList
____________
#DEREPLICATE

dRep dereplicate "$outputDir" -g /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/vamb_output/bins/* -d -com 50 -con 10

#using filtering levels equal to middel quality of contamination 10% and completness of 50% ? - ask Gisle


#test_set 
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/drep_test/dereplicate' /home/projects/dtu_00009/data/Scripts/qsub_drep_dereplicate.sh

#full dataset
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/drep/dereplicate' /home/projects/dtu_00009/data/Scripts/qsub_drep_dereplicate.sh

___________________________________________________________________________


Downloadning reference genomes:

parallel "qsub -F '{1} /home/projects/dtu_00009/data/reference_genomes/Alistipes_refs'  /home/projects/dtu_00009/data/Scripts/qsub_refgenomes_download.sh & sleep 2 " :::: /home/projects/dtu_00009/data/reference_genomes/Alistipes_refs/Alistipes_AccesionNames

parallel "qsub -F '{1}'  /home/projects/dtu_00009/data/Scripts/qsub_refgenomes_download.sh" :::: /home/projects/dtu_00009/data/reference_genomes/Alistipes_refs/Alistipes_AccesionNames



GCF_001436415.1_ASM143641v1_genomic.fna.gz did not download correctly in Lactobacillus.  - downloaded individuelt. 

___________________________________________________________________________

# InStrain
Skal bruge en mapping og fastafiler -  reference genomer (/home/projects/dtu_00009/data/reference_genomes/Lactobacillus_refs) + HQ_derepped Bins ( ⁨thesis_code⁩/data56_related_files⁩⁨)  


profile:  inStrain profile .bam_file .fasta_file -o IS_output_name

compare :   inStrain compare -i IS_output_1 IS_output_2 IS_output_3

Each inStrain profile object used by InStrain compare must be made from reads mapped to the same fasta file.

1.  Map "reads" to the genomes we want to profile - HQ_lactobacillacea bins + ref genomes against all reads. 
2.  


# copy drep_bins from vamb_output to seperate folder in /inStrain/ref_bins/
for FILE in $(cat /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/ref_bins/drep_lactobacillaceae_bins.csv)
do
    cp ${FILE} /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/ref_bins/
done

Renaming headers in bin files to match format in database genomes. remove before first space and after comma. 
>S14CNODE_5258_length_4433_cov_6.103765 species_name genome id, 
Endend up making a python script

python Append_Header_Fasta.py /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/ref_bins/ /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/ref_bins/ref_bins_header.csv 

unzip genomes from DB to be able to run dRep:
parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/qsub_unzip_nonpareil.sh" :::: /home/projects/dtu_00009/data/reference_genomes/Lactobacillaceae_refs/genomes.txt

Drep on database genomes and drep_bins. 
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/dRep/' /home/projects/dtu_00009/data/Scripts/qsub_drep_dereplicate.sh

To see the differenece between the two directories - which genomes were removed by dRep:
diff -q dRep/dereplicated_genomes/ combined_db_bins_refs/

Only in combined_db_bins_refs/: GCA_003343585.1_ASM334358v1_genomic.fna
Only in combined_db_bins_refs/: S12C188.fna

from the dereplicated genomes .fna folders we need to concatenate all our genomes to one file:
cat $(ls *.fna) > ../../allGenomes.fasta

Creating scaffold to bin file we need to conda activate env_drep og ellers køre følgende.  
parse_stb.py --reverse -f /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/dRep/dereplicated_genomes/*.fna  -o /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/genomes.stb

Mapping with bowtie2
mkdir bowtie2

#blvier nødt til at dele den op:
#create index
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/allGenomes.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/bowtie2/allGenomesMappingIndex.fa'  /home/projects/dtu_00009/data/Scripts/qsub_bowtie_build.sh

genome=$1
IndexOutput=$2

bowtie2-build "$genome" "$IndexOutput"

#Mapping
parallel "qsub -F '{1} /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/bowtie2/allGenomesMappingIndex.fa /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/mapped' /home/projects/dtu_00009/data/Scripts/qsub_bowtie.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/sampleName 

sampleName=$1
IndexOutput=$2
SamOutput=$4

bowtie2 -p 6 -x "$IndexOutput" -1 /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/"$sampleName"_1.fastq.gz -2 /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/"$sampleName"_2.fastq.gz > "$Samoutput"

Call genes on genomes:
input=$1
output=$2

prodigal -i "$input" -d "$output" -p meta

qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/allGenomes.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/allGenomes.genes.fna' /home/projects/dtu_00009/data/Scripts/qsub_Lacto_prodigal.sh

#kører meta flag da de binned genomes er contigs / lidt i tvivl om hvad da andre er, scaffolds? 
 
Instrain:

inStrain profile /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/mapped/*.sam /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/allGenomes.fasta -o /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/profile/*.IS -p 6 -g /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/allGenomesGenes/allGenomes.genes.fna -s /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/genomes.stb 

samInput=$1
inputPath=$2
genomes=$3
outputPath=$4
genes=$5
scafToBins=$6

inStrain profile "$inputPath"/"$samInput".sam  "$genomes" -o "$outputPath"/"$samInput".IS -p 12 -g "$genes" -s "$scafToBins"


parallel "qsub -F '{1} /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/mapped /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/allGenomes.fasta /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/instrain_profile /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/allGenomes.genes.fna /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/genomes.stb' /home/projects/dtu_00009/data/Scripts/qsub_instrain_profile.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/sampleName 



instrain compare

inStrain compare -i /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/instrain_profile/*.IS/ -s /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/genomes.stb -p 6 -o /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/instrain_compare/


output=$1

inStrain compare -i /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/instrain_profile/*.IS/ -s /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/genomes.stb -p 6 -o "$output"


qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/inStrain/instrain_compare/' /home/projects/dtu_00009/data/Scripts/qsub_instrain_compare.sh 


_______________________________________________________________________

Multiple alignment to do phylogeny - no need can use directly from GTDB

Mafft 

mafft --maxiterate 1000 --globalpair --amino --thread 32 in > out 

input=$1
mafft --maxiterate 1000 --globalpair --amino --thread 32 "$input" > /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/MSA/mafft_global 

qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/MSA/bins.fasta' /home/projects/dtu_00009/data/Scripts/Sripts_TM/qsub_mafft.sh

# on all sequences both on database refs and bins
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/MSA/msa_ref_and_bins' /home/projects/dtu_00009/data/Scripts/Sripts_TM/qsub_mafft.sh



FastTree

input=$1

FastTree "$input" >  /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/fastTree

qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/MSA/mafft_global' /home/projects/dtu_00009/data/Scripts/Scripts_TM/qsub_fasttree.sh

qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/MSA/bins.fasta' /home/projects/dtu_00009/data/Scripts/Scripts_TM/qsub_fasttree.sh

qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/MSA/mafft_global_all' /home/projects/dtu_00009/data/Scripts/Scripts_TM/qsub_fasttree.sh
 
_______________________________________________________________________

Kaiju
DB already made and indexed from may 2020


#code for running kaiju

sample=$1

kaiju -t /home/projects/dtu_00009/data/Kaijudb/nodes.dmp -f /home/projects/dtu_00009/data/Kaijudb/nr_euk/kaiju_db_nr_euk.fmi -i /home/proje
cts/dtu_00009/data/chicken_data_TM/2_omgang/No_contamination/"$sample"_1.fastq.gz -j /home/projects/dtu_00009/data/chicken_data_TM/2_omgang
/No_contamination/"$sample"_2.fastq.gz -o /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/kaiju/out.kaiju

qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/No_contamination/SRR6323414_1.fastq.gz /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/No_contamination/SRR6323414_2.fastq.gz' /home/projects/dtu_00009/data/Scripts/Scripts_TM/qsub_kaiju.sh

parallel "qsub -F '{1}' /home/projects/dtu_00009/data/Scripts/Scripts_TM/qsub_kaiju.sh" :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/vamb/sampleName


compining samples with taxon names using Gisles script

kaiju2phyloseq.py -i all_samples/ -n /share/databases/Kaiju/kaiju_db_nr_euk_names.dmp -m /share/databases/Kaiju/nodes.dmp -o pacu_kaiju 

kaiju2phyloseq.py -i /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/kaiju/ -n /home/projects/dtu_00009/data/Kaijudb/names.dmp -m /home/projects/dtu_00009/data/Kaijudb/nodes.dmp -o chick_kaiju 



_______________________________________________________________________

Prokka for genome annotation - gene - correct file output for roary

move the observed reference genomes from the instrain combined_db_bins_ref folder to prokka/ref_genomes.

for FILE in $(cat /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/prokka/genome_files)
do
    cp ${FILE} /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/prokka/ref_genomes/
done



prokka --kingdom Bacteria --outdir prokka_GCA_000008285 --genus Listeria --locustag GCA_000008285 GCA_000008285.1_ASM828v1_genomic.fna


genome=$1
genome_file=$2

prokka --kingdom Bacteria --outdir /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/prokka/output/"$genome"  --locustag '$genome' "$genome_file"

parallel --xapply "qsub -F '{1} {2}' /home/projects/dtu_00009/data/Scripts/Scripts_TM/qsub_prokka.sh " :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/prokka/genome_names :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/prokka/genome_files


#the bins has to long header names >37 so can try flag --centre X --compliant

#parallel --xapply "qsub -F '{1} {2}' /home/projects/dtu_00009/data/Scripts/Scripts_TM/qsub_prokka.sh " :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/prokka/genome_names :::: /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/prokka/genome_files

Der er noget der ikke virker med locustag.. prøver at skifte header names så --centre X --compliant ikke behøves

For S samples 

for i in S* ; do sed -E 's/>(.+)_S(.+)/>S\2/' $i > $i.o; done
for i in *.k ; do awk '/>/{sub(/\,/,"_"++i)}1' $i > $i.k ; done 

for GC samples ( første mellemrum )

for i in GC* ; do seqkit replace -p "\s.+" $i > $i.o.k; done

for FILE in $(cat /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/prokka/genome_files)
do
    mv ${FILE}.o.k ../ref_genomes/${FILE}
done


_______________________________________________________________________

roary 

Renaming output to contain genome name 
for FILE in $(cat /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/prokka/genome_names)
do
    mv ${FILE}/PROKKA_12142021.gff ${FILE}/PROKKA_${FILE}.gff
done

move the .gff in one folder 
for FILE in $(cat /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/prokka/genome_names)
do
    cp ${FILE}/PROKKA_${FILE}.gff /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/roary/input_gff/
done


output=$1

roary -f "$output" -e -n -v -p 16 home/projects/dtu_00009/data/chicken_data_TM/2_omgang/roary/input_gff/*.gff
 
qsub -F ' /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/roary/output_salivarius /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/roary/input_gff/L_salivarius' qsub_roary.sh 

Make a tree for the core gene alingments 
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/roary/output_salivarius/core_gene_alignment.aln /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/roary/output_salivarius/core_gene_tree.newick' /home/projects/dtu_00009/data/Scripts/Scripts_TM/qsub_fasttree.sh

this is used to create plots with roary_plots.py. in qsub_roary_plots.sh
qsub -F ' /home/projects/dtu_00009/data/chicken_data_TM/2_omgang/roary/output_salivarius/' qsub_roary_plot.sh 

_______________________________________________________________________

Making tree for genus representatives 
qsub -F '/home/projects/dtu_00009/data/chicken_data_TM/2_omgang/MSA/genus_refs.fasta' /home/projects/dtu_00009/data/Scripts/Scripts_TM/qsub_fasttree.sh


