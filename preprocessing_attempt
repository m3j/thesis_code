#!/bin/sh
### Note: No commands may be executed until after the #PBS lines
### Account information
#PBS -W group_list=dtu_00009 -A dtu_00009
### Job name (comment out the next line to get the name of the script used as the job name)
#PBS -N qsub_name
### Output files (comment out the next 2 lines to get the job name used instead)
#PBS -e $PBS_JOBID.qsub_name.stderr
#PBS -o $PBS_JOBID.qsub_name.stdout
### Only send mail when job is aborted or terminates abnormally
#PBS -m n
### Number of nodes
#PBS -l nodes=1:ppn=38:thinnode
### Memory
#PBS -l mem=180gb
### Requesting time - format is <days>:<hours>:<minutes>:<seconds> (here, 30 days)
#PBS -l walltime=30:00:00:00
##contact incase of event
#PBS -M s182409@student.dtu.dk
#PBS -m abe

# Go to the directory from where the job was submitted (initial directory is $HOME)
echo Working directory is "$PBS_O_WORKDIR"
cd "$PBS_O_WORKDIR"

# or define specific path
cd /home/projects/dtu_00009/data/chicken_data_TM 


# >>> conda initialize >>>
__conda_setup="$('/home/projects/dtu_00009/people/majjag/Bin/Programs/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/projects/dtu_00009/people/majjag/Bin/Programs/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/projects/dtu_00009/people/majjag/Bin/Programs/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/projects/dtu_00009/people/majjag/Bin/Programs/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# going to working directroy
cd /home/projects/dtu_00009/data/chicken_data_TM

mkdir Trimmed

### Here follows the user commands:
#listing the files sortet in R1 and R2 reads
ls | grep '_1.fastq.gz$' > r1.list
ls | grep '_2.fastq.gz$' > r2.list

#trim 5'prime end with 5 bases and remove adapter sequences.

#test on one sample 
#bbduk.sh ref=/home/projects/dtu_00009/data/chicken_data_TM/adapter.fa forcetrimleft=5 in1=SRR6323340_1.fastq.gz in2=SRR6323340_2.fastq.gz out1=Trimmed/SRR6323340_1.fastq.gz out2=Trimmed/SRR7610114_2.fastq.gz ktrim=r k=23 mink=11 hdist=1 hdist2=0 tpe tbo

#running on all samples 
parallel --xapply -j 38 "bbduk.sh ref=/home/projects/dtu_00009/data/chicken_data_TM/adapter.fa forcetrimleft=5 in1={1} in2={2} out1=Trimmed/{1} out2=Trimmed/{2} ktrim=r k=23 mink=11 hdist=1 hdist2=0 tpe tbo" :::: r1.list :::: r2.list


# trimming for low quality with sickle 
mkdir Hquality

#activate environment to run sickle
conda activate env_sickle

# test for one sample
#sickle pe -t sanger -g -f Trimmed/SRR6323340_1.fastq.gz -r Trimmed/SRR6323340_2.fastq.gz -l 50 -o Hquality/SRR6323340_1.fastq.gz -p Hquality/SRR6323340_2.fastq.gz -s Hquality/SRR6323340_singles.fastq.gz

# runtime with j 4 and 57 samples = 5 hours. 
#running sickle on all samples with GNU 
ls Trimmed | grep '_1.fastq.gz$' > trimmed_r1.list
ls Trimmed | grep '_2.fastq.gz$' > trimmed_r2.list
parallel --xapply -j 4 " sickle pe -t sanger -g -f Trimmed/{1} -r Trimmed/{2} -l 50 -o Hquality/{1} -p Hquality/{2} -s Hquality/{1.}_singles.fastq.gz" :::: trimmed_r1.list :::: trimmed_r2.list 

# deactivate conda environment env_sickle
conda deactivate



mkdir NoPhix

cd /home/projects/dtu_00009/data/chicken_data_TM/Hquality 

### removing PhiX contamination from Illumina. - det virkede ikke umiddelbart på det lille sæt - kørte i stedet parallels uden for q_sub.
## lavede en reads.list i stedet for at kører det på *fastq.gz i mappen - evt det virker nu. 

ls | grep 'fastq.gz' > reads.list

parallel -j 4 "bbduk.sh in={} out=../NoPhiX/{} ref=../phix174_ill.ref.fa k=31 hdist=1" :::: reads.list



parallel -j 4 "bbduk.sh in={} out=../NoPhiX/{} ref=../phix174_ill.ref.fa k=31 hdist=1" ::: *.fastq.gz




